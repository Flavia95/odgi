NAME

odgi â€” utilities for manipulating GFA

handle - refers to oriented nodes;
path_handle - the path handle type, which refers to paths;
step_handle - the step handle type, which refers to path paths;
edge - edges link two handles together.

./odgi <command> [options]

--build.. convert gfa in odgi i.e. variation graph

Options:

-g, GFA input file
-o, ODGI output file 

LIST OF COMMANDS

import odgi

- *<<g = odgi.graph()>>*..define graph

- *<<g., load ('file')>>*..load file in graph

- *<<g., append_step(options)>>*..append a visit to a node to the given path. Returns a handle to the new final step on the path which is appended.

- *<<g., apply_ordering(options)>>*..reorder the graph's internal structure
odgi.graph SELF
order: List[odgi.handle]
bool: False 

- *<<g., apply_ordering(options)>>*..change the node to which the indicated handle corresponds,the handle becomes the node's local forward orientation. Updates all links and path steps to match the new orientation.
odgi.graph SELF 
g.handle

- *<<g., get_handle(options)>>*..return the handle for the given node id
odgi.graph SELF 
node_id INT- mandatory
is_reverse BOOL - False(+) or True(-) based on the orientation of the DNA

- *<<g., get_id(options)>>*..return id of given handle
odgi.graph - already defined
handle - Look g.get_handle

- *<<g., to_gfa()>>*..display as GFA

- *<<g., get_sequence(options)>>*..return sequence of given handle
odgi.graph SELF
handle

- *<<g., get_node_count()>>..return the count of nodes in the graph

- *<<g., get_path_count()>>..return the count of path in the graph

-




